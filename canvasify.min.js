class canvas{


  constructor(w,h,col="white"){
      this.can=document.createElement("canvas")
      this.can.height=h
      this.xi=0
      this.yi=0
      this.can.width=w
      this.can.style.backgroundColor=col
      this.c=this.can.getContext("2d")
      document.body.appendChild(this.can)
  }
  
  
 
  circle(x,y,r,fill="white",col="black",ln=2,vx,vy){
    this.c.beginPath()
    this.c.arc(x,y,r,0,Math.PI*2)
    this.c.strokeStyle=col
    this.c.fillStyle=fill
    this.c.lineWidth=ln
    this.c.stroke()
    this.c.fill()
    this.c.closePath()
      
    }
  
   square(x, y, w,h,fill="white",col="black",ln=2,r=0) {
    if (w < 2 * r) r = w / 2;
    if (h < 2 * r) r = h / 2;
    this.c.beginPath();
    this.c.moveTo(x+r, y);
    this.c.arcTo(x+w, y,   x+w, y+h, r);
    this.c.arcTo(x+w, y+h, x,   y+h, r);
    this.c.arcTo(x,   y+h, x,   y,   r);
    this.c.arcTo(x,   y,   x+w+1, y,   r);
    this.c.strokeStyle=col
    this.c.fillStyle=fill
    this.c.lineWidth=ln
    this.c.stroke()
    this.c.fill()
    this.c.closePath();
  }
  
  
  line(x,y,col="black",ln=1){
    this.c.beginPath()
    this.c.strokeStyle=col
    this.c.lineWidth=ln
    this.c.moveTo(x,y)
  }
  
  ln(x,y){
    this.c.lineTo(x,y)
    this.c.stroke()
  }
  
  text(x,y,t,th=15,col="black"){
    this.c.font=th+"px helvetica"
    this.c.fillStyle=col
    this.c.fillText(t,x,y)
  }
  
  
  
  
  animate(t){
    window.requestAnimationFrame(t)
  }
  
  refresh(){
    this.c.clearRect(0,0,this.can.width,this.can.height)
  }
  
  
  
  move(vx,vy){
   this.xi+=vx
   this.yi+=vy
  }
   
  
}
